| package |
package := Package name: 'SSW ReStore ODBC'.
package paxVersion: 1;
	basicComment: 'ReStore
©2019 John Aspinall
https://github.com/rko281/ReStore'.


package classNames
	add: #SSWODBCBoundBuffer;
	add: #SSWODBCColAttr;
	add: #SSWODBCConnection;
	add: #SSWODBCField;
	add: #SSWODBCForwardOnlyResultSet;
	add: #SSWODBCResultSet;
	add: #SSWODBCRow;
	add: #SSWODBCStatement;
	yourself.

package methodNames
	add: #DBError -> #isCommunicationLinkFailure;
	add: #DBError -> #isInvalidTransactionState;
	add: #DBError -> #isRecordDeletedError;
	add: #DBErrorDetails -> #isCommunicationLinkFailure;
	add: #DBErrorDetails -> #isInvalidCursorPosition;
	add: #DBErrorDetails -> #isInvalidTransactionState;
	add: #ODBCLibrary -> #sqlDescribeParam:parameterNumber:dataTypePtr:parameterSizePtr:decimalDigitsPtr:nullablePtr:;
	add: #SSWDBField -> #asParameterColumn:for:;
	add: #SSWDBField -> #columnIn:;
	add: #SSWDBQueryField -> #asParameterColumn:for:;
	add: #SSWDBStringWithInfo -> #dbMaxFieldSize;
	add: #SSWSQLParameterField -> #asParameterColumn:for:;
	add: #SSWSQLWriteStream -> #parameterizedColumnsFor:;
	add: #String -> #asParameterColumn;
	add: 'ByteArray class' -> #dbMaxFieldSize;
	add: 'String class' -> #dbMaxFieldSize;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Database\Database Connection Base'
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'SSW ReStore Base Additions'
	'SSW ReStore Main'
	'SSW ReStore Querying'
	'SSW ReStore SQL Entities'
	'SSW ReStore SQL Queries'
	'SSW ReStore Tables').

package!

"Class Definitions"!

DBResultSet subclass: #SSWODBCResultSet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBForwardOnlyResultSet subclass: #SSWODBCForwardOnlyResultSet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBRow subclass: #SSWODBCRow
	instanceVariableNames: 'fieldMap'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBBoundBuffer subclass: #SSWODBCBoundBuffer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBParameterizedStatement subclass: #SSWODBCStatement
	instanceVariableNames: 'query'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBColAttr subclass: #SSWODBCColAttr
	instanceVariableNames: 'field maxBoundBufferSize'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBConnection subclass: #SSWODBCConnection
	instanceVariableNames: 'sqlDialect debugStream allocatedStatementCount columnDescriptions'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DBField subclass: #SSWODBCField
	instanceVariableNames: 'statement'
	classVariableNames: ''
	poolDictionaries: 'ODBCConstants'
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!ByteArray class methodsFor!

dbMaxFieldSize

	"The receiver represents the unsized character column concept in the database, therefore the max field size is undefined"

	^nil! !
!ByteArray class categoriesFor: #dbMaxFieldSize!public!specification! !

!DBError methodsFor!

isCommunicationLinkFailure

	^tag notNil and: [tag errors anySatisfy: [ :each | each isCommunicationLinkFailure]]!

isInvalidTransactionState

	^tag notNil and: [tag errors anySatisfy: [ :each | each isInvalidTransactionState]]!

isRecordDeletedError

	^tag notNil and: [tag errors anySatisfy: [ :each | each isInvalidCursorPosition]]! !
!DBError categoriesFor: #isCommunicationLinkFailure!public!testing! !
!DBError categoriesFor: #isInvalidTransactionState!public!testing! !
!DBError categoriesFor: #isRecordDeletedError!public!testing! !

!DBErrorDetails methodsFor!

isCommunicationLinkFailure

	^self sqlState = '08S01'!

isInvalidCursorPosition

	^self sqlState = 'S1109'!

isInvalidTransactionState

	^self sqlState = '25000'! !
!DBErrorDetails categoriesFor: #isCommunicationLinkFailure!public!testing! !
!DBErrorDetails categoriesFor: #isInvalidCursorPosition!public!testing! !
!DBErrorDetails categoriesFor: #isInvalidTransactionState!public!testing! !

!ODBCLibrary methodsFor!

sqlDescribeParam: anExternalHandle parameterNumber: columnInteger dataTypePtr: typeSWORD parameterSizePtr: precisionDWORD decimalDigitsPtr: scaleSWORD nullablePtr: nullableSWORD 
	"SQLRETURN SQLDescribeParam(  
	      SQLHSTMT        StatementHandle,  
	      SQLUSMALLINT    ParameterNumber,  
	      SQLSMALLINT *   DataTypePtr,  
	      SQLULEN *       ParameterSizePtr,  
	      SQLSMALLINT *   DecimalDigitsPtr,  
	      SQLSMALLINT *   NullablePtr);  "

	<stdcall: sword SQLDescribeParam handle sword SWORD* DWORD* SWORD* SWORD*>
	^self invalidCall! !
!ODBCLibrary categoriesFor: #sqlDescribeParam:parameterNumber:dataTypePtr:parameterSizePtr:decimalDigitsPtr:nullablePtr:!public!win32 functions-odbc library! !

!SSWDBField methodsFor!

asParameterColumn: anInteger for: aStatement

	^self columnIn: aStatement parent!

columnIn: anODBCConnection

	^(anODBCConnection columnsInTable: self table) at: self! !
!SSWDBField categoriesFor: #asParameterColumn:for:!accessing!public! !
!SSWDBField categoriesFor: #columnIn:!accessing!public! !

!SSWDBQueryField methodsFor!

asParameterColumn: anInteger for: aStatement

	^self field asParameterColumn: anInteger for: aStatement! !
!SSWDBQueryField categoriesFor: #asParameterColumn:for:!accessing!public! !

!SSWDBStringWithInfo methodsFor!

dbMaxFieldSize

	^self fieldSize! !
!SSWDBStringWithInfo categoriesFor: #dbMaxFieldSize!accessing!public! !

!SSWSQLParameterField methodsFor!

asParameterColumn: anInteger for: aStatement

	^(aStatement describeParam: anInteger) ifNil: [self value asParameterColumn]! !
!SSWSQLParameterField categoriesFor: #asParameterColumn:for:!converting!public! !

!SSWSQLWriteStream methodsFor!

parameterizedColumnsFor: aStatement

	| parameterizedColumns |

	parameterizedColumns := Array new: self parameterizedFields size.

	self parameterizedFields keysAndValuesDo: [ :index :field | parameterizedColumns at: index put: (field asParameterColumn: index for: aStatement)].

	^parameterizedColumns! !
!SSWSQLWriteStream categoriesFor: #parameterizedColumnsFor:!accessing!public! !

!String methodsFor!

asParameterColumn

	^SSWODBCColAttr forString: self! !
!String categoriesFor: #asParameterColumn!converting!public! !

!String class methodsFor!

dbMaxFieldSize

	"The receiver represents the unsized character column concept in the database, therefore the max field size is undefined"

	^nil! !
!String class categoriesFor: #dbMaxFieldSize!public!specification! !

"End of package definition"!

